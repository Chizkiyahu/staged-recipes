{% set name = "sony-custom-layers" %}
{% set version = "0.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/Chizkiyahu/custom_layers/archive/v{{ version }}.tar.gz # TODO change to sony
  sha256: 0378aed41e455a113b5fade51dbee304d9e6ce08fc57f05617a63c1714c8af64

build:
  number: 0

requirements:
  host:
    - python >=3.8,<=3.11
    - pip
  run:
    - python >=3.8,<=3.11
    - numpy
    - packaging

test:
  imports:
    - sony_custom_layers
  commands:
    - pip check
  requires:
    - pip

outputs:
  - name: sony-custom-layers
    build:
      noarch: python
      script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
      number: 0

  - name: sony-custom-layers-tf
    build:
      noarch: python
      script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
      number: 0
    requirements:
      host:
        - python >=3.8,<=3.11
        - pip
      run:
        - python >=3.8,<=3.11
        - tensorflow >=2.10
        - numpy
        - packaging
    test:
      imports:
        - sony_custom_layers.keras
      commands:
        - pip check
      requires:
        - pip

  - name: sony-custom-layers-torch
    build:
      noarch: python
      script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
      number: 0
    requirements:
      host:
        - python >=3.8,<=3.11
        - pip
      run:
        - python >=3.8,<=3.11
        - numpy
        - packaging
        - pytorch::pytorch >=2.0
        - pytorch::torchvision >=0.15
        - onnx
        - onnxruntime
#        - onnxruntime_extensions >=0.8.0  # TODO uncomment https://github.com/conda-forge/staged-recipes/pull/26170
    test:
      imports:
        - sony_custom_layers.pytorch
      commands:
        - pip check
      requires:
        - pip

about:
  home: https://github.com/sony/custom_layers
  doc_url: https://sony.github.io/custom_layers/
  license: Apache-2.0
  license_file: LICENSE.md
  summary: |
    Sony Custom Layers is a project implementing detection post-process NN layers 
    not supported by the TensorFlow Keras API or Torch's torch.nn,
    facilitating the easy integration of those layers into pretrained models.

extra:
  recipe-maintainers:
    - Chizkiyahu
